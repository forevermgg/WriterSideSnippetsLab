objdump -t -C training-sample

training-sample:     file format elf64-x86-64

SYMBOL TABLE:
0000000000000238 l    d  .interp        0000000000000000              .interp
0000000000000254 l    d  .note.ABI-tag  0000000000000000              .note.ABI-tag
0000000000000274 l    d  .note.gnu.build-id     0000000000000000              .note.gnu.build-id
0000000000000298 l    d  .gnu.hash      0000000000000000              .gnu.hash
00000000000002b8 l    d  .dynsym        0000000000000000              .dynsym
00000000000003c0 l    d  .dynstr        0000000000000000              .dynstr
0000000000000470 l    d  .gnu.version   0000000000000000              .gnu.version
0000000000000488 l    d  .gnu.version_r 0000000000000000              .gnu.version_r
00000000000004b8 l    d  .rela.dyn      0000000000000000              .rela.dyn
0000000000000578 l    d  .rela.plt      0000000000000000              .rela.plt
00000000000005f0 l    d  .init  0000000000000000              .init
0000000000000610 l    d  .plt   0000000000000000              .plt
0000000000000670 l    d  .plt.got       0000000000000000              .plt.got
0000000000000680 l    d  .text  0000000000000000              .text
00000000000008d4 l    d  .fini  0000000000000000              .fini
00000000000008e0 l    d  .rodata        0000000000000000              .rodata
0000000000000908 l    d  .eh_frame_hdr  0000000000000000              .eh_frame_hdr
0000000000000950 l    d  .eh_frame      0000000000000000              .eh_frame
0000000000200d98 l    d  .init_array    0000000000000000              .init_array
0000000000200da0 l    d  .fini_array    0000000000000000              .fini_array
0000000000200da8 l    d  .dynamic       0000000000000000              .dynamic
0000000000200f98 l    d  .got   0000000000000000              .got
0000000000201000 l    d  .data  0000000000000000              .data
00000000002010c4 l    d  .bss   0000000000000000              .bss
0000000000000000 l    d  .comment       0000000000000000              .comment
0000000000000000 l    df *ABS*  0000000000000000              crtstuff.c
00000000000006b0 l     F .text  0000000000000000              deregister_tm_clones
00000000000006f0 l     F .text  0000000000000000              register_tm_clones
0000000000000740 l     F .text  0000000000000000              __do_global_dtors_aux
00000000002010c4 l     O .bss   0000000000000001              completed.7698
0000000000200da0 l     O .fini_array    0000000000000000              __do_global_dtors_aux_fini_array_entry
0000000000000780 l     F .text  0000000000000000              frame_dummy
0000000000200d98 l     O .init_array    0000000000000000              __frame_dummy_init_array_entry
0000000000000000 l    df *ABS*  0000000000000000              training_sample.c
0000000000000000 l    df *ABS*  0000000000000000              crtstuff.c
0000000000000a74 l     O .eh_frame      0000000000000000              __FRAME_END__
0000000000000000 l    df *ABS*  0000000000000000
0000000000200da0 l       .init_array    0000000000000000              __init_array_end
0000000000200da8 l     O .dynamic       0000000000000000              _DYNAMIC
0000000000200d98 l       .init_array    0000000000000000              __init_array_start
0000000000000908 l       .eh_frame_hdr  0000000000000000              __GNU_EH_FRAME_HDR
0000000000200f98 l     O .got   0000000000000000              _GLOBAL_OFFSET_TABLE_
00000000000008d0 g     F .text  0000000000000002              __libc_csu_fini
0000000000000000  w      *UND*  0000000000000000              _ITM_deregisterTMCloneTable
0000000000201000  w      .data  0000000000000000              data_start
0000000000000000       F *UND*  0000000000000000              puts@@GLIBC_2.2.5
00000000002010c4 g       .data  0000000000000000              _edata
00000000000008d4 g     F .fini  0000000000000000              _fini
0000000000000000       F *UND*  0000000000000000              __stack_chk_fail@@GLIBC_2.4
0000000000201020 g     O .data  0000000000000032              google_dns_ping
0000000000000000       F *UND*  0000000000000000              system@@GLIBC_2.2.5
0000000000000000       F *UND*  0000000000000000              __libc_start_main@@GLIBC_2.2.5
0000000000000000       F *UND*  0000000000000000              fgets@@GLIBC_2.2.5
0000000000201000 g       .data  0000000000000000              __data_start
0000000000000000  w      *UND*  0000000000000000              __gmon_start__
0000000000201008 g     O .data  0000000000000000              .hidden __dso_handle
00000000000008e0 g     O .rodata        0000000000000004              _IO_stdin_used
0000000000000860 g     F .text  0000000000000065              __libc_csu_init
00000000002010c8 g       .bss   0000000000000000              _end
0000000000000680 g     F .text  000000000000002b              _start
00000000002010c4 g       .bss   0000000000000000              __bss_start
0000000000201060 g     O .data  0000000000000064              some_string
000000000000080d g     F .text  000000000000004d              main
0000000000000000       F *UND*  0000000000000000              popen@@GLIBC_2.2.5
00000000002010c8 g     O .data  0000000000000000              .hidden __TMC_END__
0000000000000000  w      *UND*  0000000000000000              _ITM_registerTMCloneTable
000000000000078a g     F .text  0000000000000083              ping_google_dns
0000000000000000  w    F *UND*  0000000000000000              __cxa_finalize@@GLIBC_2.2.5
00000000000005f0 g     F .init  0000000000000000              _init



 objcopy --compress-debug-sections training-sample training-sample-compress-debug-sections



 bloaty training-sample-compress-debug-sections -- training-sample
     FILE SIZE        VM SIZE
  --------------  --------------
  -34.4%    -600  [ = ]       0    .symtab
   -6.8%    -600  [ = ]       0    TOTAL



有两种方式可以实现dwarf信息压缩：
1、objcopy --compress-debug-sections
2、--compress-debug-section这个功能已经集成在gcc编译选项中，在链接的linker_flags中加入-gz选项可以实现同样的效果。